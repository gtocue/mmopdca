## Worker Dockerfile: builder and runtime stages

# Builder stage: installs dependencies and prepares the app
FROM python:3.11-slim AS builder

# Set working directory
WORKDIR /app

# Install build tools for installing Python packages
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Copy poetry configuration and install dependencies
COPY pyproject.toml poetry.lock* README.md ./
RUN pip install --no-cache-dir --upgrade pip poetry \
    && rm -f poetry.lock \
    && poetry export -f requirements.txt --output requirements.txt --without-hashes \
    && pip install --no-cache-dir -r requirements.txt

# Copy entrypoint script and make it executable
COPY ops/init-dsl.sh /usr/local/bin/docker-entrypoint-init-dsl.sh
RUN dos2unix /usr/local/bin/docker-entrypoint-init-dsl.sh \
    && chmod +x /usr/local/bin/docker-entrypoint-init-dsl.sh

# Copy the rest of the application source code
COPY . .

# Create application user and group for correct file permissions
RUN groupadd -g 1000 app \
    && useradd -u 1000 -g app -m -s /bin/sh app


# Runtime stage: use the builder artifacts to run the service
FROM python:3.11-slim AS runtime

# Set working directory
WORKDIR /app

# Install runtime dependencies (e.g., dos2unix)
RUN apt-get update \
    && apt-get install -y --no-install-recommends dos2unix \
    && rm -rf /var/lib/apt/lists/*

# Re-create the application user and group
RUN groupadd -g 1000 app \
    && useradd -u 1000 -g app -m -s /bin/sh app

# Copy installed Python packages from the builder
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages

# Copy application code and entrypoint
COPY --from=builder /app /app
COPY --from=builder /usr/local/bin/docker-entrypoint-init-dsl.sh /usr/local/bin/docker-entrypoint-init-dsl.sh

# Prepare persistent directories and set ownership
RUN mkdir -p /mnt/data/dsl /mnt/checkpoints \
    && chown app:app /mnt/data/dsl /mnt/checkpoints

# Switch to non-root user
USER app

# Entry point
ENTRYPOINT ["/usr/local/bin/docker-entrypoint-init-dsl.sh"]

# Default command for the worker
CMD ["celery", "-A", "core.celery_app:celery_app", "worker", "--loglevel=info"]
