###############################################################################
# docker/compose.ci.yml  窶・ GitHub Actions・修I 逕ｨ Compose 繧ｹ繧ｿ繝・け螳夂ｾｩ
###############################################################################
#  笳・ASSIST_KEY: 縺薙・繝輔ぃ繧､繝ｫ縺ｯ縲薪ocker/compose.ci.yml縲代↓驟咲ｽｮ縺励∪縺・
# ---------------------------------------------------------------------------
# 縲舌Θ繝九ャ繝亥錐縲・         compose-ci-stack
# 縲蝉ｸｻ縺ｪ讖溯・繝ｻ雋ｬ蜍吶・     笏 GitHub Actions 荳翫〒 窶懈怙蟆城剞縺ｮ邨ｱ蜷医ユ繧ｹ繝育腸蠅・・繧呈ｧ狗ｯ・ 
#                        笏 API繝ｻWorker繝ｻBeat 縺・Web/Redis/Postgres 縺ｫ謗･邯壹〒縺阪ｋ縺・
#                        笏 Prometheus / Exporters 縺・200 OK 繧定ｿ斐☆縺・
#
# 縲蝉ｸｻ縺ｪ蠖ｹ蜑ｲ縲・
#   - FastAPI (api) 縺ｮ襍ｷ蜍慕｢ｺ隱搾ｼ・ort 8001 /docs 縺ｧ 200・・
#   - Celery worker & beat 縺ｮ繝悶・繝育｢ｺ隱・
#   - Redis / Postgres 縺ｮ繧ｳ繝ｳ繝・リ襍ｷ蜍・& 繝倥Ν繧ｹ繝√ぉ繝・け
#   - Prometheus + redis-exporter + celery-exporter 縺ｮ繝｡繝医Μ繧ｯ繧ｹ逍朱・
#
# 縲宣｣謳ｺ蜈医・萓晏ｭ倬未菫ゅ・
#   - docker/compose.core.yml・磯幕逋ｺ譛ｬ逡ｪ蜈ｱ騾夲ｼ・
#   - docker/compose.db.yml   ・域ｰｸ邯・DB / Redis・・
#   - .github/workflows/ci.yml・・I 繝ｯ繝ｼ繧ｯ繝輔Ο繝ｼ譛ｬ菴難ｼ・
#
# 縲舌Ν繝ｼ繝ｫ驕ｵ螳医Γ繝｢縲・
#   1) **version:** 縺ｯ逵∫払縺励，ompose v3+ 閾ｪ蜍募愛螳・
#   2) CI 縺ｧ縺ｯ豌ｸ邯・Volume 繧呈戟縺溘★縲・溷ｺｦ蜆ｪ蜈医〒 tmpfs 繧剃ｽｿ逕ｨ
#   3) 繝｡繝医Μ繧ｯ繧ｹ Exporter 縺ｯ CE_BROKER_URL 縺ｮ縺ｿ菴ｿ逕ｨ
#   4) 霑ｽ蜉讖溯・縺ｮ縺ｿ螳溯｣・・譌｢蟄倥し繝ｼ繝薙せ繧貞｣翫＆縺ｪ縺・
#
# ---------------------------------------------------------------------------
# NOTE:
#   - GitHub Actions 繝ｩ繝ｳ繝翫・縺ｯ root 縺ｧ蜍輔￥縺溘ａ繝代・繝溘ャ繧ｷ繝ｧ繝ｳ隱ｿ謨ｴ縺ｯ逵∫払
#   - 繝懊Μ繝･繝ｼ繝繧・tmpfs 蛹・竊・restore-cache 縺ｧ鬮倬溷喧縺吶ｋ譯医ｂ讀懆ｨ惹ｽ吝慍 (#46)
###############################################################################

services:

  ##########################################################################
  # FastAPI (Unit 繝・せ繝茨ｼ輯moke 繝・せ繝医・蟇ｾ雎｡)
  ##########################################################################
  api:
    build:
      context: ..
      dockerfile: Dockerfile.main_api
    command: >
      python -m uvicorn api.main_api:app
             --host 0.0.0.0 --port 8001 --proxy-headers
    env_file: [ ../.env ]
    environment:
      DSL_ROOT: /mnt/data/dsl
      CELERY_BROKER_URL: redis://default:${REDIS_PASSWORD}@redis:6379/0
      CELERY_RESULT_BACKEND: ${CELERY_BROKER_URL}
    depends_on:
      db:     { condition: service_healthy }
      redis:  { condition: service_started }
    ports:   [ "8001:8001" ]
    # tmpfs 繝槭え繝ｳ繝医〒 I/O 繧帝ｫ倬溷喧・・I 縺ｯ豌ｸ邯夊ｦ√ｉ縺夲ｼ・
    tmpfs:
      - /mnt/data/dsl
      - /mnt/checkpoints
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8001/docs || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 12

  ##########################################################################
  # Celery Worker
  ##########################################################################
  worker:
    build:
      context: ..
      dockerfile: Dockerfile
      target: runtime
    command: >
      celery -A core.celery_app:celery_app worker --loglevel=info
    env_file: [ ../.env ]
    environment:
      DSL_ROOT: /mnt/data/dsl
      CELERY_BROKER_URL: redis://default:${REDIS_PASSWORD}@redis:6379/0
      CELERY_RESULT_BACKEND: ${CELERY_BROKER_URL}
    depends_on:
      redis: { condition: service_started }

  ##########################################################################
  # Celery Beat
  ##########################################################################
  beat:
    build:
      context: ..
      dockerfile: Dockerfile
      target: runtime
    command: >
      celery -A core.celery_app:celery_app
             beat --loglevel=info
             --schedule=/mnt/checkpoints/celerybeat-schedule
    env_file: [ ../.env ]
    environment:
      DSL_ROOT: /mnt/data/dsl
      CELERY_BROKER_URL: redis://default:${REDIS_PASSWORD}@redis:6379/0
      CELERY_RESULT_BACKEND: ${CELERY_BROKER_URL}
    depends_on:
      redis: { condition: service_started }

  ##########################################################################
  # Redis  (Broker)
  ##########################################################################
  redis:
    image: redis:7-alpine
    command: >
      redis-server --requirepass ${REDIS_PASSWORD}
                   --maxmemory 128mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  ##########################################################################
  # PostgreSQL・医・繧､繧ｰ繝ｬ譛ｪ繝・せ繝医〒繧りｵｷ蜍慕｢ｺ隱阪□縺托ｼ・
  ##########################################################################
  db:
    image: postgres:16-alpine
    env_file: [ ../.env ]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 10

  ##########################################################################
  # Exporters & Prometheus
  ##########################################################################
  redis-exporter:
    image: oliver006/redis_exporter:v1.60.0
    command:
      - "--redis.addr=redis://default:${REDIS_PASSWORD_ENC}@redis:6379"
    depends_on:
      redis: { condition: service_started }
    ports: [ "9121:9121" ]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:9121/metrics"]
      interval: 5s
      timeout: 3s
      retries: 12

  celery-exporter:
    image: danihodovic/celery-exporter:0.9.1
    environment:
      CE_BROKER_URL: redis://default:${REDIS_PASSWORD_ENC}@redis:6379/0
      CE_PORT: 9808
    ports: [ "9808:9808" ]
    depends_on:
      redis: { condition: service_started }
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:9808/metrics"]
      interval: 5s
      timeout: 3s
      retries: 12

  prom:
    image: prom/prometheus:v2.52.0
    command:
      - --web.enable-lifecycle
      - --storage.tsdb.retention.time=24h
    volumes:
      # 譛蟆上Ν繝ｼ繝ｫ繧ｻ繝・ヨ縺ｮ縺ｿ蜷梧｢ｱ
      - ../prom/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      redis-exporter:   { condition: service_started }
      celery-exporter:  { condition: service_started }
    ports: [ "9090:9090" ]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:9090/-/ready"]
      interval: 5s
      timeout: 3s
      retries: 12

###############################################################################
# CI 蜷代￠縺ｪ縺ｮ縺ｧ豌ｸ邯壹・繝ｪ繝･繝ｼ繝縺ｯ螳夂ｾｩ縺励↑縺・ｼ・itHub 繝ｩ繝ｳ繝翫・縺ｯ豈主屓繧ｯ繝ｪ繝ｼ繝ｳ・・
###############################################################################

