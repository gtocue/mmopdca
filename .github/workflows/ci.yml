name: CI

on:
  push:
    branches:
      - main
      - feature/api-only-day1
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.11']

    services:
      redis:
        image: redis:7-alpine
        ports: ['6379:6379']
      db:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: mmopdca
          POSTGRES_USER: mmopdca
          POSTGRES_PASSWORD: mmopdca
        ports: ['5433:5433']
      prom:
        image: prom/prometheus:v2.52.0
        ports: ['9090:9090']
      grafana:
        image: grafana/grafana-oss:10.4.2
        ports: ['3000:3000']

    steps:
      # 1) コード取得
      - uses: actions/checkout@v4

      # 2) Python 環境 & pip キャッシュ
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      # 3) ワークスペース構造の表示（デバッグ用）
      - name: Show workspace
        run: |
          echo "::group::Workspace"
          tree -L 2 || ls -R | head -n 100
          echo "::endgroup::"

      # 4) 依存インストール
      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -e ".[dev]"
          pip install -e "sdk-py[dev]"
          if [ -f requirements-ci.txt ]; then pip install -r requirements-ci.txt; fi

                # 4.5) .env ファイルを用意
      - name: Prepare .env
        run: cp .env.ci.example .env

      # 5) Docker Compose でサービス起動
      - name: Start MMOPDCA services
        run: |
          source .venv/bin/activate
          docker compose -f docker/compose.core.yml \
                        -f docker/compose.db.yml \
                        -f docker/compose.redis.yml up -d --build
      - name: Wait for API healthy
        run: |
          source .venv/bin/activate
          for i in {1..30}; do
            if curl -sSf http://localhost:8001/health; then
              echo "API ready"; break
            fi
            echo "Waiting for API... ($i)"
            sleep 2
          done

      # 6) SDK Quickstart サンプル実行
      - name: Run SDK quickstart
        env:
          MMOP_BASE_URL: http://localhost:8001
          CKPT_ROOT: ${{ runner.temp }}/mmop_ckpt
        run: |
          source .venv/bin/activate
          python sdk-py/examples/quickstart.py

      # 7) Pytest: ユニットテスト
      - name: Run unit tests
        run: |
          source .venv/bin/activate
          pytest -q --maxfail=1 --disable-warnings tests/unit

      # 8) Pytest: 統合テスト
      - name: Run integration tests
        run: |
          source .venv/bin/activate
          pytest -q --maxfail=1 --disable-warnings tests/integration

      # 9) Pytest: E2Eテスト
      - name: Run e2e tests
        env:
          API_BASE_URL: http://localhost:8001
        run: |
          source .venv/bin/activate
          pytest -q --maxfail=1 --disable-warnings tests/e2e

      # 10) サービス停止
      - name: Tear down services
        if: always()
        run: |
          docker compose -f docker/compose.core.yml \
                        -f docker/compose.db.yml \
                        -f docker/compose.redis.yml down -v
