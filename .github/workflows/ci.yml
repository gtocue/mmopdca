# .github/workflows/ci.yml
name: CI - compose up & healthcheck

on:
  push:
    branches: [ main, develop ]
  pull_request:

jobs:
  compose-up-test:
    runs-on: ubuntu-latest

    # 笶ｶ Docker/Compose 繧剃ｽｿ縺・◆繧∫音讓ｩ繝｢繝ｼ繝・
    permissions:
      contents: read
    steps:
      #-------------------------------------------------------------------#
      # 0. 莠句燕繧ｻ繝・ヨ繧｢繝・・
      #-------------------------------------------------------------------#
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Compose version
        run: docker compose version

      #-------------------------------------------------------------------#
      # 1. .env 繧堤函謌・・・EDIS_PASSWORD 縺ｯ繝繝溘・縺ｧ OK・・
      #-------------------------------------------------------------------#
      - name: Create .env for CI
        run: |
          cat > .env <<'EOF'
          REDIS_PASSWORD=ci_test_pass
          REDIS_PASSWORD_ENC=ci_test_pass
          POSTGRES_DB=mmopdca
          POSTGRES_USER=mmop_user
          POSTGRES_PASSWORD=PgPass
          DSL_ROOT=/mnt/data/dsl
          LOG_LEVEL=INFO
          TZ=UTC
          EOF

      #-------------------------------------------------------------------#
      # 2. Compose up ・・ore + db + ports・・
      #-------------------------------------------------------------------#
      - name: Compose up -d
        run: |
          docker compose \
            -f docker/compose.core.yml \
            -f docker/compose.db.yml   \
            -f docker/compose.ports.yml \
            up -d --build

      #-------------------------------------------------------------------#
      # 3. 繝倥Ν繧ｹ繝√ぉ繝・け・・001 / 9090 / 9121 / 9808・・
      #    30 遘剃ｻ･蜀・↓ 200 縺瑚ｿ斐ｉ縺ｪ縺代ｌ縺ｰ螟ｱ謨・
      #-------------------------------------------------------------------#
      - name: Wait for services
        run: |
          endpoints=("8001/docs" "9090" "9121/metrics" "9808/metrics")
          for ep in "${endpoints[@]}"; do
            echo "博 Health-check http://localhost:${ep}"
            for i in {1..30}; do
              status=$(curl -s -o /dev/null -w '%{http_code}' http://localhost:${ep} || true)
              if [ "$status" = "200" ]; then
                echo "笨・$ep 竊・200 OK"
                break
              fi
              sleep 2
              if [ "$i" = "30" ]; then
                echo "笶・$ep did not return 200 within timeout"
                docker compose logs --tail=50
                exit 1
              fi
            done
          done

      #-------------------------------------------------------------------#
      # 4. 蠕檎援莉倥￠
      #-------------------------------------------------------------------#
      - name: Compose down
        if: always()
        run: |
          docker compose \
            -f docker/compose.core.yml \
            -f docker/compose.db.yml   \
            -f docker/compose.ports.yml \
            down -v --remove-orphans

