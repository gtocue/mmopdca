# .github/workflows/stack-health.yml
name: CI - Docker Stack Health

on:
  push:
    branches: [ main, develop ]   # 竊・螂ｽ縺ｿ縺ｧ螟画峩
  pull_request:

jobs:
  compose-health:
    runs-on: ubuntu-latest

    # GitHub Actions 縺・rootless Docker 繧剃ｽｿ縺医ｋ繧医≧縺ｫ貅門ｙ
    steps:
      # 0) 繧ｳ繝ｼ繝牙叙蠕・
      - uses: actions/checkout@v4

      # 1) 譛譁ｰ Docker CLI + compose窶壬lugin 繧偵そ繝・ヨ繧｢繝・・
      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      # 2) .env 繧堤函謌撰ｼ医ヱ繧ｹ繝ｯ繝ｼ繝峨ｄ繝医・繧ｯ繝ｳ縺ｯ Secrets 縺九ｉ豕ｨ蜈･・・
      - name: Create .env for CI
        run: |
          cat > .env <<'EOF'
          REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD_RAW }}
          REDIS_PASSWORD_ENC=${{ secrets.REDIS_PASSWORD_URL }}
          POSTGRES_DB=mmopdca
          POSTGRES_USER=mmop_user
          POSTGRES_PASSWORD=${{ secrets.PG_PASSWORD }}
          DSL_ROOT=/mnt/data/dsl
          LOG_LEVEL=INFO
          TZ=UTC
          EOF
          sed -n '1,10p' .env   # 竊・繝・ヰ繝・げ逕ｨ縺ｫ荳ｭ霄ｫ縺ｮ蜈磯ｭ縺縺大・蜉・

      # 3) Stack 繧定ｵｷ蜍包ｼ医ン繝ｫ繝芽ｾｼ・・
      - name: docker compose up
        run: |
          docker compose                          \
            --env-file .env                       \
            -f docker/compose.core.yml            \
            -f docker/compose.db.yml              \
            -f docker/compose.ports.yml           \
            up -d --build
          docker compose ps

      # 4) 笏笏笏笏笏笏笏笏笏 Healthy 繝√ぉ繝・け 笏笏笏笏笏笏笏笏笏
      - name: Wait until all endpoints respond 200
        run: |
          set -e
          check() { curl -fsSL "http://localhost:$1$2" -o /dev/null; }
          echo "竢ｳ waiting for ports窶ｦ"
          for i in {1..30}; do
            if  check 8001 /docs         \
            &&  check 9090 /             \
            &&  check 9121 /metrics      \
            &&  check 9808 /metrics; then
              echo "笨・all ports are up"
              exit 0
            fi
            sleep 4
          done
          echo "笶・some ports never became healthy"; docker compose logs --tail=50
          exit 1

      # 5) Optional: 邁｡譏薙ユ繧ｹ繝医ｒ豬√☆・・ytest 縺ｪ縺ｩ・・
      # - name: Run unit tests
      #   run: pytest

      # 6) Stack 迚・ｻ倥￠
      - name: docker compose down
        if: always()
        run: |
          docker compose                          \
            --env-file .env                       \
            -f docker/compose.core.yml            \
            -f docker/compose.db.yml              \
            -f docker/compose.ports.yml           \
            down -v --remove-orphans

