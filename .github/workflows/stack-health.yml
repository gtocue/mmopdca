# .github/workflows/stack-health.yml
name: stack-health

on:
  push:
    branches:
      - main
      - develop
  pull_request: {}

jobs:
  compose-health:
    runs-on: ubuntu-latest

    steps:
      # 1) リポジトリをチェックアウト
      - name: Checkout code
        uses: actions/checkout@v4

      # 2) Docker Buildx のセットアップ
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3) .env ファイルを生成
      - name: Create .env
        run: |
          cat > .env << 'EOF'
          POSTGRES_DB=mmopdca
          POSTGRES_USER=mmop_user
          POSTGRES_PASSWORD=password
          REDIS_PASSWORD=
          DSL_ROOT=/mnt/data/dsl
          TZ=UTC
          EOF
          echo ">>> .env preview:"
          head -n 10 .env

      # 4) スタックを起動
      - name: Docker Compose up
        run: |
          docker compose --env-file .env \
            -f docker/compose.ci.yml up -d --build
          docker compose --env-file .env \
            -f docker/compose.ci.yml ps

      # 5) 各サービスのヘルスチェック待ち
      - name: Wait for endpoints
        run: |
          set -eu
          for i in {1..30}; do
            curl -fs http://localhost:8001/docs \
              && curl -fs http://localhost:9090/ \
              && curl -fs http://localhost:9121/metrics \
              && curl -fs http://localhost:9808/metrics \
              && echo "All endpoints are healthy!" \
              && exit 0
            echo "Waiting for services to become healthy... ($i/30)"
            sleep 4
          done
          echo "Timed out waiting for services."
          docker compose -f docker/compose.ci.yml logs --tail=50
          exit 1

      # 6) スタックを停止・クリーンアップ
      - name: Docker Compose down
        if: always()
        run: |
          docker compose -f docker/compose.ci.yml down -v --remove-orphans
