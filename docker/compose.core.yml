# docker/compose.core.yml
version: "3.9"

# 共通定義
x-env: &default-env
  env_file:
    - ../.env

# depends_on の healthcheck 用
x-retry: &retry
  interval: 10s
  timeout: 5s
  start_period: 20s
  retries: 5

services:
  api:
    build:
      context: ..
      dockerfile: Dockerfile.main_api
    user: "1000:1000"
    <<: *default-env
    environment:
      - DSL_ROOT
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - CKPT_DIR=/mnt/checkpoints
    entrypoint:
      - /usr/local/bin/docker-entrypoint-init-dsl.sh
    command:
      - python
      - -m
      - uvicorn
      - api.main_api:app
      - "--host=0.0.0.0"
      - "--port=8001"
      - "--proxy-headers"
    volumes:
      - dsl_data:/mnt/data/dsl
      - checkpoints_data:/mnt/checkpoints
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - mmopdca_default
    restart: unless-stopped

  worker:
    build:
      context: ..
      dockerfile: Dockerfile
      target: runtime
    user: "1000:1000"
    <<: *default-env
    environment:
      - DSL_ROOT
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - CKPT_DIR=/mnt/checkpoints
    entrypoint:
      - /usr/local/bin/docker-entrypoint-init-dsl.sh
    command:
      - celery
      - -A
      - core.celery_app:celery_app
      - worker
      - --loglevel=info
    volumes:
      - dsl_data:/mnt/data/dsl
      - checkpoints_data:/mnt/checkpoints
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - mmopdca_default
    restart: on-failure

  beat:
    build:
      context: ..
      dockerfile: Dockerfile
      target: runtime
    user: root
    <<: *default-env
    environment:
      - DSL_ROOT
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DO_TOTAL_SHARDS
      - CKPT_DIR=/mnt/checkpoints
    entrypoint:
      - sh
      - -c
      - |
        mkdir -p /mnt/checkpoints && chmod 0777 /mnt/checkpoints
        exec /usr/local/bin/docker-entrypoint-init-dsl.sh \
          celery -A core.celery_app:celery_app \
          beat --loglevel=info \
               --schedule=/mnt/checkpoints/celerybeat-schedule
    volumes:
      - dsl_data:/mnt/data/dsl
      - checkpoints_data:/mnt/checkpoints
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - mmopdca_default
    restart: on-failure

  redis-exporter:
    image: gtocue/redis-exporter:prod
    <<: *default-env
    command:
      - --redis.addr=redis://redis:6379/0
    healthcheck:
      test: [ "CMD", "curl", "-sf", "http://localhost:9121/metrics", "||", "exit", "1" ]
      <<: *retry
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - mmopdca_default
    restart: unless-stopped

  celery-exporter:
    image: gtocue/celery-exporter:prod
    <<: *default-env
    environment:
      - CE_BROKER_URL=redis://redis:6379/0
      - CE_BACKEND_URL=redis://redis:6379/0
      - CE_PORT=9808
      - CE_RETRY_INTERVAL=5
    healthcheck:
      test: [ "CMD", "curl", "-sf", "http://localhost:9808/metrics", "||", "exit", "1" ]
      <<: *retry
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - mmopdca_default
    restart: unless-stopped

  prom:
    image: prom/prometheus:v2.52.0
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.retention.time=14d
    volumes:
      - ../prom/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ../prom/rules_mmopdca.yml:/etc/prometheus/rules_mmopdca.yml:ro
      - prom_data:/prometheus
    depends_on:
      redis-exporter:
        condition: service_started
      celery-exporter:
        condition: service_started
    networks:
      - mmopdca_default
    restart: unless-stopped

  grafana:
    image: grafana/grafana-oss:10.4.2
    <<: *default-env
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ../grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      prom:
        condition: service_started
    networks:
      - mmopdca_default
    restart: unless-stopped

volumes:
  dsl_data:
  checkpoints_data:
  pg_data:
  redis_data:
  prom_data:
  grafana_data:


networks:
  mmopdca_default:
    external: true
