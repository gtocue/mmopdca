# --------------------------------------------------------
# File: Dockerfile.main_api
# ========================================================
FROM python:3.11-slim AS api-builder

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

RUN apt-get update \
    && apt-get install -y --no-install-recommends \
    build-essential \
    dos2unix \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# 依存定義の先読み
COPY pyproject.toml poetry.lock* ./
RUN pip install --no-cache-dir --upgrade pip poetry \
    && rm -f poetry.lock \
    && poetry config virtualenvs.create false \
    && poetry install --no-root --no-interaction --no-ansi --without dev \
    && pip install python-multipart

# ── ここから追加 ──
# DSL 初期化スクリプトをビルドステージにコピー
COPY ops/init-dsl.sh /usr/local/bin/docker-entrypoint-init-dsl.sh
RUN dos2unix /usr/local/bin/docker-entrypoint-init-dsl.sh \
    && chmod +x /usr/local/bin/docker-entrypoint-init-dsl.sh
# ── ここまで追加 ──

# アプリ本体をコピー
COPY . .

# DSL 初期化スクリプトをコピー→整形→実行権限付与
COPY ops/init-dsl.sh /usr/local/bin/docker-entrypoint-init-dsl.sh
RUN dos2unix /usr/local/bin/docker-entrypoint-init-dsl.sh \
    && chmod +x /usr/local/bin/docker-entrypoint-init-dsl.sh

# --------------------------------------------------------
# 2) ランタイムステージ
# --------------------------------------------------------
FROM python:3.11-slim AS api-runtime

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

RUN apt-get update \
    && apt-get install -y --no-install-recommends \
    dos2unix \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# ビルドステージからライブラリとアプリ本体を丸ごとコピー
COPY --from=api-builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=api-builder /app /app
COPY --from=api-builder /usr/local/bin/docker-entrypoint-init-dsl.sh /usr/local/bin/

# ── ここから追加 ──
# init スクリプトもコピーしておく
COPY --from=api-builder /usr/local/bin/docker-entrypoint-init-dsl.sh /usr/local/bin/
# ── ここまで追加 ──

EXPOSE 8001

# 起動時に DSL 初期化を実行してから uvicorn を起動
ENTRYPOINT ["/usr/local/bin/docker-entrypoint-init-dsl.sh"]
CMD ["uvicorn", "api.main_api:app", "--host", "0.0.0.0", "--port", "8001", "--proxy-headers"]
