###############################################################################
# .env.example  –  mmopdca  フルパラメータ一覧
#   • ローカル開発 → 値はこのまま利用可能
#   • 本番        → 「★ PROD」でマークした行は必ず上書き
###############################################################################

################################################################################
# 1) Database – PostgreSQL
################################################################################
DB_BACKEND           = postgres           # memory / sqlite でも可
PG_HOST              = db                 # docker-compose の service 名
PG_PORT              = 5432
POSTGRES_DB          = mmopdca
POSTGRES_USER        = mmop_user
POSTGRES_PASSWORD    = ChangeMe!123       # ★ PROD: docker secret で注入

################################################################################
# 2) Redis  / Celery
################################################################################
# コンテナ外 (ホスト OS) から叩くときは 127.0.0.1 に書き換え
REDIS_HOST           = redis
REDIS_PORT           = 6379
REDIS_DB             = 0
REDIS_PASSWORD       = ChangeMe!456       # ★ PROD: docker secret で注入

REDIS_URL            = redis://$(REDIS_HOST):$(REDIS_PORT)/$(REDIS_DB)
# Celery も同じエンドポイントを使用
CELERY_BROKER_URL    = $(REDIS_URL)
CELERY_RESULT_BACKEND= $(REDIS_URL)

# Celery Worker tunables
WORKER_CONCURRENCY   = 28                 # $nCPU を超えない程度
WORKER_TASKS_PER_CHILD = 50               # leak 対策
WORKER_UID           = nobody             # root で走らせない

################################################################################
# 3) 内部 REST / マイクロサービス
################################################################################
MASTER_BASE_URL      = http://master-api:8070/api/master
MOTHER_BASE_URL      = http://mother-api:8060/api/mother
SECRET_TOKEN         = dev-local-token    # ★ PROD: 32 byte 以上 & secret

################################################################################
# 4) DSL ファイルストア
################################################################################
DSL_ROOT             = /mnt/data/dsl
DEFAULTS_DIR         = $(DSL_ROOT)/defaults
SCHEMAS_DIR          = $(DSL_ROOT)/schemas

################################################################################
# 5) TLS／OAuth (Reverse-Proxy & Grafana SSO 用)
################################################################################
DOMAIN               = localhost          # ★ PROD: FQDN
TLS_CERT_FILE        = /etc/nginx/cert.pem
TLS_KEY_FILE         = /etc/nginx/key.pem

# Grafana OAuth (例: GitHub) – 必要に応じて
GF_AUTH_GENERIC_OAUTH_CLIENT_ID     = ""
GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET = ""
GF_AUTH_GENERIC_OAUTH_AUTH_URL      = ""
GF_AUTH_GENERIC_OAUTH_TOKEN_URL     = ""
GF_AUTH_GENERIC_OAUTH_API_URL       = ""

###############################################################################
# *** ここより下は通常いじらない ************************************************
###############################################################################
LOG_LEVEL            = INFO
PYTHONUNBUFFERED     = 1                  # ログを即 flush
TZ                   = UTC
