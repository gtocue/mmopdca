/* tslint:disable */
/* eslint-disable */
/**
 * mmopdca API
 * Command-DSL-driven forecasting micro-service API only
 *
 * The version of the OpenAPI document: 0.4.0
 * Contact: gtocue510@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Plan 作成リクエスト。
 * 
 * * `id` を省略した場合はルーター側で UUID を自動採番。
 * * `symbol / start / end` は旧 API 互換の最小セット。
 * @export
 * @interface PlanCreateRequest
 */
export interface PlanCreateRequest {
    /**
     * 
     * @type {string}
     * @memberof PlanCreateRequest
     */
    id?: string | null;
    /**
     * メイン銘柄ティッカー
     * @type {string}
     * @memberof PlanCreateRequest
     */
    symbol: string;
    /**
     * 学習開始日 (ISO-8601)
     * @type {Date}
     * @memberof PlanCreateRequest
     */
    start: Date;
    /**
     * 学習終了日 (ISO-8601)
     * @type {Date}
     * @memberof PlanCreateRequest
     */
    end: Date;
}

/**
 * Check if a given object implements the PlanCreateRequest interface.
 */
export function instanceOfPlanCreateRequest(value: object): value is PlanCreateRequest {
    if (!('symbol' in value) || value['symbol'] === undefined) return false;
    if (!('start' in value) || value['start'] === undefined) return false;
    if (!('end' in value) || value['end'] === undefined) return false;
    return true;
}

export function PlanCreateRequestFromJSON(json: any): PlanCreateRequest {
    return PlanCreateRequestFromJSONTyped(json, false);
}

export function PlanCreateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlanCreateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'symbol': json['symbol'],
        'start': (new Date(json['start'])),
        'end': (new Date(json['end'])),
    };
}

export function PlanCreateRequestToJSON(json: any): PlanCreateRequest {
    return PlanCreateRequestToJSONTyped(json, false);
}

export function PlanCreateRequestToJSONTyped(value?: PlanCreateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'symbol': value['symbol'],
        'start': ((value['start']).toISOString().substring(0,10)),
        'end': ((value['end']).toISOString().substring(0,10)),
    };
}

