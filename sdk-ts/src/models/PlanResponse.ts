/* tslint:disable */
/* eslint-disable */
/**
 * mmopdca API
 * Command-DSL-driven forecasting micro-service API only
 *
 * The version of the OpenAPI document: 0.4.0
 * Contact: gtocue510@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Plan 取得／作成時に返す共通レスポンス。
 * 
 * 旧クライアント互換の最小キー (id / symbol / start / end / created_at)
 * 以外にも、DSL 全フィールドを残すため `extra="allow"`。
 * @export
 * @interface PlanResponse
 */
export interface PlanResponse {
    [key: string]: any | any;
    /**
     * 
     * @type {string}
     * @memberof PlanResponse
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof PlanResponse
     */
    symbol: string;
    /**
     * 
     * @type {Date}
     * @memberof PlanResponse
     */
    start?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof PlanResponse
     */
    end?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof PlanResponse
     */
    createdAt: string;
}

/**
 * Check if a given object implements the PlanResponse interface.
 */
export function instanceOfPlanResponse(value: object): value is PlanResponse {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('symbol' in value) || value['symbol'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function PlanResponseFromJSON(json: any): PlanResponse {
    return PlanResponseFromJSONTyped(json, false);
}

export function PlanResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlanResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'id': json['id'],
        'symbol': json['symbol'],
        'start': json['start'] == null ? undefined : (new Date(json['start'])),
        'end': json['end'] == null ? undefined : (new Date(json['end'])),
        'createdAt': json['created_at'],
    };
}

export function PlanResponseToJSON(json: any): PlanResponse {
    return PlanResponseToJSONTyped(json, false);
}

export function PlanResponseToJSONTyped(value?: PlanResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'id': value['id'],
        'symbol': value['symbol'],
        'start': value['start'] == null ? undefined : ((value['start'] as any).toISOString().substring(0,10)),
        'end': value['end'] == null ? undefined : ((value['end'] as any).toISOString().substring(0,10)),
        'created_at': value['createdAt'],
    };
}

