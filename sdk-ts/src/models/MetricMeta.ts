/* tslint:disable */
/* eslint-disable */
/**
 * mmopdca API
 * Command-DSL-driven forecasting micro-service API only
 *
 * The version of the OpenAPI document: 0.4.0
 * Contact: gtocue510@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MetricMeta
 */
export interface MetricMeta {
    /**
     * 
     * @type {string}
     * @memberof MetricMeta
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof MetricMeta
     */
    unit?: string | null;
    /**
     * 
     * @type {number}
     * @memberof MetricMeta
     */
    slo?: number | null;
    /**
     * 
     * @type {string}
     * @memberof MetricMeta
     */
    _class: MetricMetaClassEnum;
}


/**
 * @export
 */
export const MetricMetaClassEnum = {
    S: 'S',
    A: 'A',
    B: 'B'
} as const;
export type MetricMetaClassEnum = typeof MetricMetaClassEnum[keyof typeof MetricMetaClassEnum];


/**
 * Check if a given object implements the MetricMeta interface.
 */
export function instanceOfMetricMeta(value: object): value is MetricMeta {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('_class' in value) || value['_class'] === undefined) return false;
    return true;
}

export function MetricMetaFromJSON(json: any): MetricMeta {
    return MetricMetaFromJSONTyped(json, false);
}

export function MetricMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): MetricMeta {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'unit': json['unit'] == null ? undefined : json['unit'],
        'slo': json['slo'] == null ? undefined : json['slo'],
        '_class': json['class'],
    };
}

export function MetricMetaToJSON(json: any): MetricMeta {
    return MetricMetaToJSONTyped(json, false);
}

export function MetricMetaToJSONTyped(value?: MetricMeta | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'unit': value['unit'],
        'slo': value['slo'],
        'class': value['_class'],
    };
}

