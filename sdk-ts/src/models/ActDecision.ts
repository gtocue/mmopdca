/* tslint:disable */
/* eslint-disable */
/**
 * mmopdca API
 * Command-DSL-driven forecasting micro-service API only
 *
 * The version of the OpenAPI document: 0.4.0
 * Contact: gtocue510@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ActAction } from './ActAction';
import {
    ActActionFromJSON,
    ActActionFromJSONTyped,
    ActActionToJSON,
    ActActionToJSONTyped,
} from './ActAction';

/**
 * 
 * @export
 * @interface ActDecision
 */
export interface ActDecision {
    /**
     * act-xxxx 一意 ID
     * @type {string}
     * @memberof ActDecision
     */
    id: string;
    /**
     * 紐づく Check ID
     * @type {string}
     * @memberof ActDecision
     */
    checkId: string;
    /**
     * UTC ISO8601
     * @type {Date}
     * @memberof ActDecision
     */
    decidedAt: Date;
    /**
     * 
     * @type {ActAction}
     * @memberof ActDecision
     */
    action: ActAction;
    /**
     * 意思決定根拠 (人間可読)
     * @type {string}
     * @memberof ActDecision
     */
    reason: string;
}



/**
 * Check if a given object implements the ActDecision interface.
 */
export function instanceOfActDecision(value: object): value is ActDecision {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('checkId' in value) || value['checkId'] === undefined) return false;
    if (!('decidedAt' in value) || value['decidedAt'] === undefined) return false;
    if (!('action' in value) || value['action'] === undefined) return false;
    if (!('reason' in value) || value['reason'] === undefined) return false;
    return true;
}

export function ActDecisionFromJSON(json: any): ActDecision {
    return ActDecisionFromJSONTyped(json, false);
}

export function ActDecisionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActDecision {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'checkId': json['check_id'],
        'decidedAt': (new Date(json['decided_at'])),
        'action': ActActionFromJSON(json['action']),
        'reason': json['reason'],
    };
}

export function ActDecisionToJSON(json: any): ActDecision {
    return ActDecisionToJSONTyped(json, false);
}

export function ActDecisionToJSONTyped(value?: ActDecision | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'check_id': value['checkId'],
        'decided_at': ((value['decidedAt']).toISOString()),
        'action': ActActionToJSON(value['action']),
        'reason': value['reason'],
    };
}

