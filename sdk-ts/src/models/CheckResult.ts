/* tslint:disable */
/* eslint-disable */
/**
 * mmopdca API
 * Command-DSL-driven forecasting micro-service API only
 *
 * The version of the OpenAPI document: 0.4.0
 * Contact: gtocue510@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Report } from './Report';
import {
    ReportFromJSON,
    ReportFromJSONTyped,
    ReportToJSON,
    ReportToJSONTyped,
} from './Report';

/**
 * /check エンドポイントのレスポンス & ストレージフォーマット
 * report はタスク未完了時に None を返すケースを考慮
 * @export
 * @interface CheckResult
 */
export interface CheckResult {
    /**
     * check-xxxx 形式の一意 ID
     * @type {string}
     * @memberof CheckResult
     */
    id: string;
    /**
     * 評価対象の Do ID
     * @type {string}
     * @memberof CheckResult
     */
    doId: string;
    /**
     * UTC ISO8601
     * @type {Date}
     * @memberof CheckResult
     */
    createdAt: Date;
    /**
     * 
     * @type {Report}
     * @memberof CheckResult
     */
    report?: Report | null;
}

/**
 * Check if a given object implements the CheckResult interface.
 */
export function instanceOfCheckResult(value: object): value is CheckResult {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('doId' in value) || value['doId'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function CheckResultFromJSON(json: any): CheckResult {
    return CheckResultFromJSONTyped(json, false);
}

export function CheckResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): CheckResult {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'doId': json['do_id'],
        'createdAt': (new Date(json['created_at'])),
        'report': json['report'] == null ? undefined : ReportFromJSON(json['report']),
    };
}

export function CheckResultToJSON(json: any): CheckResult {
    return CheckResultToJSONTyped(json, false);
}

export function CheckResultToJSONTyped(value?: CheckResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'do_id': value['doId'],
        'created_at': ((value['createdAt']).toISOString()),
        'report': ReportToJSON(value['report']),
    };
}

