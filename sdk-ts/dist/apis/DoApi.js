/* tslint:disable */
/* eslint-disable */
/**
 * mmopdca API
 * Command-DSL-driven forecasting micro-service API only
 *
 * The version of the OpenAPI document: 0.4.0
 * Contact: gtocue510@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { DoCreateRequestToJSON, DoResponseFromJSON, } from '../models/index';
/**
 *
 */
export class DoApi extends runtime.BaseAPI {
    /**
     * Plan に紐づく Do フェーズのジョブを Celery に enqueue（または同期実行）する。
     * Enqueue Do job (Celery)
     */
    async enqueueDoDoPlanIdPostRaw(requestParameters, initOverrides) {
        if (requestParameters['planId'] == null) {
            throw new runtime.RequiredError('planId', 'Required parameter "planId" was null or undefined when calling enqueueDoDoPlanIdPost().');
        }
        const queryParameters = {};
        const headerParameters = {};
        headerParameters['Content-Type'] = 'application/json';
        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // APIKeyHeader authentication
        }
        const response = await this.request({
            path: `/do/{plan_id}`.replace(`{${"plan_id"}}`, encodeURIComponent(String(requestParameters['planId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: DoCreateRequestToJSON(requestParameters['doCreateRequest']),
        }, initOverrides);
        return new runtime.JSONApiResponse(response);
    }
    /**
     * Plan に紐づく Do フェーズのジョブを Celery に enqueue（または同期実行）する。
     * Enqueue Do job (Celery)
     */
    async enqueueDoDoPlanIdPost(requestParameters, initOverrides) {
        const response = await this.enqueueDoDoPlanIdPostRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     * do_id で指定した Do レコードを返す。
     * Get Do record
     */
    async getDoDoDoIdGetRaw(requestParameters, initOverrides) {
        if (requestParameters['doId'] == null) {
            throw new runtime.RequiredError('doId', 'Required parameter "doId" was null or undefined when calling getDoDoDoIdGet().');
        }
        const queryParameters = {};
        const headerParameters = {};
        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // APIKeyHeader authentication
        }
        const response = await this.request({
            path: `/do/{do_id}`.replace(`{${"do_id"}}`, encodeURIComponent(String(requestParameters['doId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => DoResponseFromJSON(jsonValue));
    }
    /**
     * do_id で指定した Do レコードを返す。
     * Get Do record
     */
    async getDoDoDoIdGet(requestParameters, initOverrides) {
        const response = await this.getDoDoDoIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     * Celery の AsyncResult を使って、タスクの生の状態を返す。
     * Raw Celery task state
     */
    async getDoStatusDoStatusTaskIdGetRaw(requestParameters, initOverrides) {
        if (requestParameters['taskId'] == null) {
            throw new runtime.RequiredError('taskId', 'Required parameter "taskId" was null or undefined when calling getDoStatusDoStatusTaskIdGet().');
        }
        const queryParameters = {};
        const headerParameters = {};
        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // APIKeyHeader authentication
        }
        const response = await this.request({
            path: `/do/status/{task_id}`.replace(`{${"task_id"}}`, encodeURIComponent(String(requestParameters['taskId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response);
    }
    /**
     * Celery の AsyncResult を使って、タスクの生の状態を返す。
     * Raw Celery task state
     */
    async getDoStatusDoStatusTaskIdGet(requestParameters, initOverrides) {
        const response = await this.getDoStatusDoStatusTaskIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     * 保存済みの全 Do レコード一覧を返す。
     * List Do records
     */
    async listDoDoGetRaw(initOverrides) {
        const queryParameters = {};
        const headerParameters = {};
        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // APIKeyHeader authentication
        }
        const response = await this.request({
            path: `/do/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(DoResponseFromJSON));
    }
    /**
     * 保存済みの全 Do レコード一覧を返す。
     * List Do records
     */
    async listDoDoGet(initOverrides) {
        const response = await this.listDoDoGetRaw(initOverrides);
        return await response.value();
    }
}
